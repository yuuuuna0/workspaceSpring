<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis3.dao.mapper.StudentMapper">
	<!--  
	/**************************************************
	 * SELECT
	 **************************************************/
	//A.select sql의결과타입이 DTO,VO,Domain객체인경우 resultType : DTO,VO,Domain
	 -->
	<select id="findStudentById" parameterType="int" resultType="com.mybatis3.domain.Student">
		select stud_id,name,email,dob from students where stud_id=#{studId}
	</select>
	<select id="findAllStudents" resultType="com.mybatis3.domain.Student">
		select stud_id,name,email,dob from students
	</select>
	<!-- 
	//B.select sql의결과타입이 String,Wrapper객체인경우 resultType : java.lang.String, java.lang.Integer
	 -->
	 <select id="findStudentNameById" parameterType="java.lang.Integer" resultType="java.lang.String">
	 	select name from students where stud_id=#{studId}
	 </select>
	 <!-- result타입이 List가 아님, sql문에서 뽑히는 타입이 중요함!! List인지는 sqlSession에서 selectList로 넣어주면 됨 -->
	 <select id="findStudentNameList" resultType="java.lang.String">
	 	select name from students
	 </select>
	<!--  
	/**************************************************
	 * Insert		parameterType:DTO,VO,Domain
	 **************************************************/
	 -->

	<insert id="insertStudent" parameterType="com.mybatis3.domain.Student">
		insert into students(stud_id,name,email,dob) values(#{studId},#{name},#{email},#{dob})
	</insert>
	<!--  sequence1은 pk를 사용할 수 없다 -->
	<insert id="insertStudentBySequence1" parameterType="com.mybatis3.domain.Student">
		insert into students(stud_id,name,email,dob) values(students_stud_id_seq.nextVal,#{name},#{email},#{dob})
	</insert>
	<!--
	<insert id="insertStudentBySequence2" parameterType="com.mybatis3.domain.Student">
		<selectKey order="BEFORE" resultType="int" keyProperty="studId">
			select students_stud_id_seq.nextval from dual
		</selectKey>
		insert into students(stud_id,name,email,dob) values(#{studId},#{name},#{email},#{dob})
	</insert>
	 -->
	<!-- 
	/***************************************************
	 * UPDATE		parameterType:DTO,VO,Domain
	 ***************************************************/
	 -->
	 <update id="updateStudentById" parameterType="com.mybatis3.domain.Student">
	 	update students set name=#{name}, email=#{email}, dob=#{dob} where stud_id=#{studId}
	 </update>
	 <!-- 
	 /***************************************************
	 * DELETE		parameterType:int,java.lang.String
	 ****************************************************/
	  -->
	  <delete id="deleteStudentById" parameterType="int">
	  	delete from students where stud_id=#{studId}
	  </delete>
	  
	  
	  <!-- ###################### resultMap 정의 ####################### -->
	  <resultMap id="studentWithAddressResultMap" type="com.mybatis3.domain.Student">
	  	<!-- 
	  	<result column="STUD_ID" property="studId"/>
	  	<result column="NAME" property="name"/>
	  	<result column="EMAIL" property="email"/>
	  	<result column="DOB" property="dob"/>
	  	 -->
	  	<association property="address" javaType="com.mybatis3.domain.Address" autoMapping="true">
	  		<!-- 
	  		<result column="ADDR_ID" property="addrId"/>
	  		<result column="STREET" property="street"/>
	  		<result column="CITY" property="city"/>
	  		<result column="STATE" property="state"/>
	  		<result column="ZIP" property="zip"/>
	  		<result column="COUNTRY" property="country"/>
	  		 -->
	  	</association>
	  </resultMap>
	  <!--  
	/**************************************************
	 * SELECT	[students+address JOIN](1:1)
	 **************************************************/
	 //A.select sql의결과타입이 DTO,VO,Domain객체인경우 
	 	 resultMap : DTO,VO,Domain
	 -->
	  <select id="findStudentByIdWithAddress" 
	  		  parameterType="java.lang.Integer" 
	  		  resultMap="studentWithAddressResultMap">
	  		select stud_id, name, email,phone, a.addr_id, street, city, state, zip, country
			FROM students s 
			left outer join addresses a 
			on s.addr_id=a.addr_id where stud_id=#{studId}
	  </select>
	  
	  
	  
	  
	  
	  
</mapper>