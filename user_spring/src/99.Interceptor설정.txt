
① HandlerInterceptor 인터페이스(추천),
   HandlerInterceptorAdapter 추상클래스구현
	
	public class AuthLoginInterceptor implements HandlerInterceptor {
		//특정 메소드가 실행되기 전에 실행되는 인터셉터 메소드
		public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {}
	}
	

②mvc-config.xml에 mvc:interceptor설정 -->WebConfig.java에 설정함
	<mvc:interceptors>
		    <mvc:interceptor>
		        <mvc:mapping path="/**"/>  
		        <mvc:exclude-mapping path="/user_main"/>       
		        <mvc:exclude-mapping path="/user_write_form"/>       
		        <mvc:exclude-mapping path="/user_login_form"/>       
		        <mvc:exclude-mapping path="/user_login_action"/>       
		        <mvc:exclude-mapping path="/user_write_action"/>       
		        <mvc:exclude-mapping path="/css/**"/>
		        <mvc:exclude-mapping path="/js/**"/>
		        <mvc:exclude-mapping path="/image/**"/>
		        <bean class="com.itwill.user.controller.AuthLoginInterceptor" />
		    </mvc:interceptor>
	   </mvc:interceptors>
	   
③	WebConfig.java 에 인터셉터등록   
@Configuration
public class WebConfig implements WebMvcConfigurer{
	
	@Override
	public void addInterceptors(InterceptorRegistry registry) {
		AuthLoginInterceptor authLoginInterceptor=new AuthLoginInterceptor();
		registry.addInterceptor(authLoginInterceptor)
		.addPathPatterns("/**")	//전체등록
		.excludePathPatterns("/css/**")
		.excludePathPatterns("/js/**")
		.excludePathPatterns("/image/**")
		.excludePathPatterns("/user_main")
		.excludePathPatterns("/user_write_form")
		.excludePathPatterns("/user_write_action")
		.excludePathPatterns("/user_login_form")
		.excludePathPatterns("/user_login_action");
	}
}
	   	